{"version":3,"sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import * as BluebirdPromise from \"bluebird\"\nimport { config as dotEnvConfig } from \"dotenv\"\nimport dotEnvExpand from \"dotenv-expand\"\nimport { pathExists, readJson } from \"fs-extra\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { validateConfig } from \"read-config-file\"\nimport { deepAssign } from \"read-config-file/out/deepAssign\"\nimport \"source-map-support/register\"\nimport { Configuration, Plugin, RuleSetRule } from \"webpack\"\nimport merge from \"webpack-merge\"\nimport { getElectronWebpackConfiguration, getPackageMetadata } from \"./config\"\nimport { configureTypescript } from \"./configurators/ts\"\nimport { configureVue } from \"./configurators/vue/vue\"\nimport { ConfigurationEnv, ConfigurationType, ElectronWebpackConfiguration, PackageMetadata, PartConfiguration } from \"./core\"\nimport { BaseTarget } from \"./targets/BaseTarget\"\nimport { MainTarget } from \"./targets/MainTarget\"\nimport { BaseRendererTarget, RendererTarget } from \"./targets/RendererTarget\"\nimport { getFirstExistingFile } from \"./util\"\n\nexport { ElectronWebpackConfiguration } from \"./core\"\n\nconst _debug = require(\"debug\")\n\n// noinspection JSUnusedGlobalSymbols\nexport function getAppConfiguration(env: ConfigurationEnv) {\n  return BluebirdPromise.filter([configure(\"main\", env), configure(\"renderer\", env)], it => it != null)\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport function getMainConfiguration(env: ConfigurationEnv) {\n  return configure(\"main\", env)\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport function getRendererConfiguration(env: ConfigurationEnv) {\n  return configure(\"renderer\", env)\n}\n\n// in the future, if need, isRenderer = true arg can be added\n// noinspection JSUnusedGlobalSymbols\nexport function getDllConfiguration(env: ConfigurationEnv) {\n  return configure(\"renderer-dll\", env)\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport async function getTestConfiguration(env: ConfigurationEnv) {\n  const configurator = await createConfigurator(\"test\", env)\n  return await configurator.configure({\n    testComponents: path.join(process.cwd(), \"src/renderer/components/testComponents.ts\"),\n  })\n}\n\nexport class WebpackConfigurator {\n  readonly projectDir: string\n\n  private electronVersionPromise = new Lazy(() => getInstalledElectronVersion(this.projectDir))\n\n  readonly isRenderer: boolean\n  readonly isProduction: boolean\n  readonly isTest = this.type === \"test\"\n\n  readonly sourceDir: string\n  readonly staticSourceDirectory: string\n  readonly commonSourceDirectory: string\n  readonly commonDistDirectory: string\n\n  readonly rendererTemplate: string\n\n  readonly debug = _debug(`electron-webpack:${this.type}`)\n\n  private _configuration: Configuration | null = null\n\n  get config(): Configuration {\n    return this._configuration!!\n  }\n\n  readonly rules: Array<RuleSetRule> = []\n  readonly plugins: Array<Plugin> = []\n\n  // js must be first - e.g. iView has two files loading-bar.js and loading-bar.vue - when we require \"loading-bar\", js file must be resolved and not vue\n  readonly extensions: Array<string> = [\".js\", \".json\", \".node\"]\n\n  private _electronVersion: string | null = null\n\n  get electronVersion(): string {\n    return this._electronVersion!!\n  }\n\n  readonly entryFiles: Array<string> = []\n\n  // electronWebpackConfiguration expected to be resolved (use getElectronWebpackConfiguration())\n  constructor(readonly type: ConfigurationType, readonly env: ConfigurationEnv, readonly electronWebpackConfiguration: ElectronWebpackConfiguration, readonly metadata: PackageMetadata) {\n    if (metadata.dependencies == null) {\n      metadata.dependencies = {}\n    }\n    if (metadata.devDependencies == null) {\n      metadata.devDependencies = {}\n    }\n\n    this.projectDir = electronWebpackConfiguration.projectDir!!\n    this.isRenderer = type.startsWith(\"renderer\")\n    process.env.BABEL_ENV = type\n\n    this.isProduction = this.env.production == null ? process.env.NODE_ENV === \"production\" : this.env.production\n\n    this.debug(`isProduction: ${this.isProduction}`)\n\n    this.sourceDir = this.getSourceDirectory(this.type)!!\n\n    this.staticSourceDirectory = this.electronWebpackConfiguration.staticSourceDirectory!!\n    this.commonSourceDirectory = this.electronWebpackConfiguration.commonSourceDirectory!!\n    this.commonDistDirectory = this.electronWebpackConfiguration.commonDistDirectory!!\n\n    this.rendererTemplate = (this.electronWebpackConfiguration.renderer && this.electronWebpackConfiguration.renderer.template) || \"src/index.ejs\"\n  }\n\n  /**\n   * Returns null if code processing for type is disabled.\n   */\n  getSourceDirectory(type: ConfigurationType): string | null {\n    const part = this.getPartConfiguration(type)\n    if (part === null || (part != null && part.sourceDirectory === null)) {\n      // part or sourceDirectory is explicitly set to null\n      return null\n    }\n\n    const result = part == null ? null : part.sourceDirectory\n    if (result == null) {\n      return path.join(this.projectDir, \"src\", type.startsWith(\"renderer\") || type === \"test\" ? \"renderer\" : type)\n    }\n    else {\n      return path.resolve(this.projectDir, result)\n    }\n  }\n\n  getPartConfiguration(type: ConfigurationType): PartConfiguration | null | undefined {\n    if (type === \"main\") {\n      return this.electronWebpackConfiguration.main\n    }\n    else {\n      return this.electronWebpackConfiguration.renderer\n    }\n  }\n\n  hasDependency(name: string) {\n    return name in this.metadata.dependencies || this.hasDevDependency(name)\n  }\n\n  hasDevDependency(name: string) {\n    return name in this.metadata.devDependencies\n  }\n\n  /**\n   * Returns the names of devDependencies that match a given string or regex.\n   * If no matching dependencies are found, an empty array is returned.\n   *\n   * @return list of matching dependency names, e.g. `[\"@babel/preset-react\", \"@babel/preset-stage-0\"]`\n   */\n  getMatchingDevDependencies(options: GetMatchingDevDependenciesOptions = {}) {\n    const includes = options.includes || []\n    const excludes = new Set(options.excludes || [])\n    return Object.keys(this.metadata.devDependencies)\n      .filter(name => !excludes.has(name) && includes.some(prefix => name.startsWith(prefix)))\n  }\n\n  async configure(entry?: { [key: string]: any } | null) {\n    // noinspection SpellCheckingInspection\n    this._configuration = {\n      context: this.projectDir,\n      devtool: this.isProduction || this.isTest ? \"nosources-source-map\" : \"eval-source-map\",\n      externals: this.computeExternals(),\n      node: {\n        __dirname: !this.isProduction,\n        __filename: !this.isProduction,\n      },\n      output: {\n        filename: \"[name].js\",\n        chunkFilename: \"[name].bundle.js\",\n        libraryTarget: \"commonjs2\",\n        path: path.join(this.commonDistDirectory, this.type)\n      },\n      target: this.isTest ? \"node\" : `electron-${this.type === \"renderer-dll\" ? \"renderer\" : this.type}` as any,\n      resolve: {\n        alias: {\n          \"@\": this.sourceDir,\n          common: this.commonSourceDirectory,\n        },\n        extensions: this.extensions,\n      },\n      module: {\n        rules: this.rules,\n      },\n      plugins: this.plugins,\n    }\n\n    if (entry != null) {\n      this._configuration.entry = entry\n    }\n\n    // if electronVersion not specified, use latest\n    this._electronVersion = this.electronWebpackConfiguration.electronVersion || await this.electronVersionPromise.value || \"3.0.7\"\n    const target = (() => {\n      switch (this.type) {\n        case \"renderer\": return new RendererTarget()\n        case \"renderer-dll\": return new BaseRendererTarget()\n        case \"test\": return new BaseRendererTarget()\n        case \"main\": return new MainTarget()\n        default: return new BaseTarget()\n      }\n    })()\n    this.debug(`Target class: ${target.constructor.name}`)\n    target.configureRules(this)\n    await Promise.all([target.configurePlugins(this), configureTypescript(this)])\n    configureVue(this)\n\n    if (this.debug.enabled) {\n      this.debug(`\\n\\n${this.type} config:` + JSON.stringify(this._configuration, null, 2) + \"\\n\\n\")\n    }\n\n    if (this.config.entry == null) {\n      this.entryFiles.push((await computeEntryFile(this.sourceDir, this.projectDir))!!)\n      this.config.entry = {\n        [this.type]: this.entryFiles,\n      }\n\n      const mainConfiguration = this.electronWebpackConfiguration.main || {}\n      let extraEntries = mainConfiguration.extraEntries\n      if (this.type === \"main\" && extraEntries != null) {\n        if (typeof extraEntries === \"string\") {\n          extraEntries = [extraEntries]\n        }\n\n        if (Array.isArray(extraEntries)) {\n          for (const p of extraEntries) {\n            this.config.entry[path.basename(p, path.extname(p))] = p\n          }\n        }\n        else {\n          Object.assign(this.config.entry, extraEntries)\n        }\n      }\n    }\n\n    // noinspection ES6RedundantAwait\n    this._configuration = await Promise.resolve(this.applyCustomModifications(this.config))\n\n    return this.config\n  }\n\n  private applyCustomModifications(config: Configuration): Configuration {\n    const { renderer, main } = this.electronWebpackConfiguration\n\n    const applyCustom = (configPath: string) => {\n      const customModule = require(path.join(this.projectDir, configPath))\n      if (typeof customModule === \"function\") {\n        return customModule(config, this)\n      }\n      else {\n        return merge.smart(config, customModule)\n      }\n    }\n\n    if (this.type === \"renderer\" && renderer && renderer.webpackConfig) {\n      return applyCustom(renderer.webpackConfig)\n    }\n    else if (this.type === \"renderer-dll\" && renderer && renderer.webpackDllConfig) {\n      return applyCustom(renderer.webpackDllConfig)\n    }\n    else if (this.type === \"main\" && main && main.webpackConfig) {\n      return applyCustom(main.webpackConfig)\n    }\n    else {\n      return config\n    }\n  }\n\n  private computeExternals() {\n    const whiteListedModules = new Set(this.electronWebpackConfiguration.whiteListedModules || [])\n    if (this.isRenderer) {\n      whiteListedModules.add(\"react\")\n      whiteListedModules.add(\"react-dom\")\n      whiteListedModules.add(\"vue\")\n    }\n\n    const filter = (name: string) => !name.startsWith(\"@types/\") && (whiteListedModules == null || !whiteListedModules.has(name))\n    const externals: Array<string> = Object.keys(this.metadata.dependencies).filter(filter)\n    externals.push(\"electron\")\n    externals.push(\"webpack\")\n    // because electron-devtools-installer specified in the devDependencies, but required in the index.dev\n    externals.push(\"electron-devtools-installer\")\n    if (this.type === \"main\") {\n      externals.push(\"webpack/hot/log-apply-result\")\n      externals.push(\"electron-webpack/out/electron-main-hmr/HmrClient\")\n      externals.push(\"source-map-support/source-map-support.js\")\n    }\n\n    if (this.electronWebpackConfiguration.externals != null) {\n      return externals.concat(this.electronWebpackConfiguration.externals)\n    }\n\n    return externals\n  }\n}\n\nconst schemeDataPromise = new Lazy(() => readJson(path.join(__dirname, \"..\", \"scheme.json\")))\n\nexport async function createConfigurator(type: ConfigurationType, env: ConfigurationEnv | null) {\n  if (env != null) {\n    // allow to pass as `--env.autoClean=false` webpack arg\n    const _env: any = env\n    for (const name of [\"minify\", \"autoClean\", \"production\"]) {\n      if (_env[name] === \"true\") {\n        _env[name] = true\n      }\n      else if (_env[name] === \"false\") {\n        _env[name] = false\n      }\n    }\n  }\n\n  if (env == null) {\n    env = {}\n  }\n\n  const projectDir = (env.configuration || {}).projectDir || process.cwd()\n  const packageMetadata = getPackageMetadata(projectDir)\n  const electronWebpackConfig = await getElectronWebpackConfiguration({\n    packageMetadata,\n    projectDir,\n  })\n  if (env.configuration != null) {\n    deepAssign(electronWebpackConfig, env.configuration)\n  }\n\n  await validateConfig(electronWebpackConfig, schemeDataPromise, message => {\n    return `${message}\n\nHow to fix:\n1. Open https://webpack.electron.build/configuration\n2. Search the option name on the page.\n  * Not found? The option was deprecated or not exists (check spelling).\n  * Found? Check that the option in the appropriate place. e.g. \"sourceDirectory\" only in the \"main\" or \"renderer\", not in the root.\n`\n  })\n  return new WebpackConfigurator(type, env, electronWebpackConfig, await packageMetadata.value)\n}\n\nexport async function configure(type: ConfigurationType, env: ConfigurationEnv | null): Promise<Configuration | null> {\n  const configurator = await createConfigurator(type, env)\n  const sourceDir = configurator.sourceDir\n  // explicitly set to null - do not handle at all and do not show info message\n  if (sourceDir === null) {\n    return null\n  }\n\n  const processEnv = configurator.isProduction ? \"production\" : \"development\"\n  const dotEnvPath = path.resolve(configurator.projectDir, \".env\")\n  const dotenvFiles = [\n    `${dotEnvPath}.${processEnv}.local`,\n    `${dotEnvPath}.${processEnv}`,\n    `${dotEnvPath}.local`,\n    dotEnvPath,\n  ]\n\n  for (const file of dotenvFiles) {\n    const exists = await pathExists(file)\n    if (exists) {\n      dotEnvExpand(\n        dotEnvConfig({\n          path: file\n        })\n      )\n    }\n  }\n  return await configurator.configure()\n}\n\nasync function computeEntryFile(srcDir: string, projectDir: string): Promise<string | null> {\n  const candidates: Array<string> = []\n  for (const ext of [\"ts\", \"js\", \"tsx\", \"jsx\"]) {\n    for (const name of [\"index\", \"main\", \"app\"]) {\n      candidates.push(`${name}.${ext}`)\n    }\n  }\n\n  const file = await getFirstExistingFile(candidates, srcDir)\n  if (file == null) {\n    throw new Error(`Cannot find entry file ${path.relative(projectDir, path.join(srcDir, \"index.ts\"))} (or main.ts, or app.ts, or index.js, or main.js, or app.js)`)\n  }\n  return file\n}\n\nasync function getInstalledElectronVersion(projectDir: string) {\n  for (const name of [\"electron\", \"electron-prebuilt\", \"electron-prebuilt-compile\"]) {\n    try {\n      return (await readJson(path.join(projectDir, \"node_modules\", name, \"package.json\"))).version\n    }\n    catch (e) {\n      if (e.code !== \"ENOENT\") {\n        throw e\n      }\n    }\n  }\n}\n\nexport interface GetMatchingDevDependenciesOptions {\n  /**\n   * The list of prefixes to include, e.g. `[\"babel-preset-\"]`.\n   */\n  includes?: Array<string>\n  /**\n   * The list of names to exclude.\n   */\n  excludes?: Array<string>\n}\n"],"sourceRoot":""}
