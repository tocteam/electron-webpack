{"version":3,"sources":["../../src/targets/MainTarget.ts"],"names":[],"mappings":";;;;;;;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEM,MAAO,UAAP,SAA0B,wBAA1B,CAAoC;AACxC,EAAA,WAAA,GAAA;AACE;AACD;;AAED,EAAA,cAAc,CAAC,YAAD,EAAkC;AAC9C,UAAM,cAAN,CAAqB,YAArB;AAEA,IAAA,YAAY,CAAC,KAAb,CAAmB,IAAnB,CAAwB;AACtB,MAAA,IAAI,EAAE,kBADgB;AAEtB,MAAA,GAAG,EAAE,CACH;AACE,QAAA,MAAM,EAAE,YADV;AAEE;AACA,QAAA,OAAO,EAAE,uCAAoB,MAApB,EAA4B,KAAK,IAAL,GAAY,IAAxC;AAHX,OADG;AAFiB,KAAxB;AAUD;;AAED,QAAM,gBAAN,CAAuB,YAAvB,EAAwD;AACtD,UAAM,yBAAW,SAAX,CAAqB,gBAArB,CAAsC,IAAtC,CAA2C,IAA3C,EAAiD,YAAjD,CAAN;;AAEA,QAAI,YAAY,CAAC,YAAjB,EAA+B;AAC7B,MAAA,YAAY,CAAC,OAAb,CAAqB,IAArB,CAA0B,KAAI,uBAAJ,EAAiB;AACzC,QAAA,QAAQ,EAAE,6BAA6B,YAAY,CAAC,qBAAqB;AADhC,OAAjB,CAA1B,EAD6B,CAK7B;;AACA,MAAA,YAAY,CAAC,OAAb,CAAqB,IAArB,CAA0B,KAAI,uBAAJ,EAAiB;AACzC,QAAA,MAAM,EAAE,gEADiC;AAEzC,QAAA,IAAI,EAAE,OAFmC;AAGzC,QAAA,GAAG,EAAE,IAHoC;AAIzC,QAAA,SAAS,EAAE;AAJ8B,OAAjB,CAA1B;AAMA;AACD;;AAED,IAAA,YAAY,CAAC,UAAb,CAAwB,IAAxB,CAA6B,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,+BAArB,CAA7B;AACA,UAAM,YAAY,GAAG,MAAM,kCAAqB,CAAC,cAAD,EAAiB,cAAjB,CAArB,EAAuD,IAAI,CAAC,IAAL,CAAU,YAAY,CAAC,UAAvB,EAAmC,UAAnC,CAAvD,CAA3B;;AACA,QAAI,YAAY,IAAI,IAApB,EAA0B;AACxB,MAAA,YAAY,CAAC,UAAb,CAAwB,IAAxB,CAA6B,YAA7B;AACD;AACF;;AA3CuC,C","sourcesContent":["import * as path from \"path\"\nimport { BannerPlugin, DefinePlugin } from \"webpack\"\nimport { WebpackConfigurator } from \"../main\"\nimport { getFirstExistingFile } from \"../util\"\nimport { BaseTarget, configureFileLoader } from \"./BaseTarget\"\n\nexport class MainTarget extends BaseTarget {\n  constructor() {\n    super()\n  }\n\n  configureRules(configurator: WebpackConfigurator): void {\n    super.configureRules(configurator)\n\n    configurator.rules.push({\n      test: /\\.(png|jpg|gif)$/,\n      use: [\n        {\n          loader: \"url-loader\",\n          // to avoid any issues related to asar, embed any image up to 10MB as data url\n          options: configureFileLoader(\"imgs\", 10 * 1024 * 1024),\n        }\n      ]\n    })\n  }\n\n  async configurePlugins(configurator: WebpackConfigurator): Promise<void> {\n    await BaseTarget.prototype.configurePlugins.call(this, configurator)\n\n    if (configurator.isProduction) {\n      configurator.plugins.push(new DefinePlugin({\n        __static: `process.resourcesPath + \"/${configurator.staticSourceDirectory}\"`\n      }))\n\n      // do not add for main dev (to avoid adding to hot update chunks), our main-hmr install it\n      configurator.plugins.push(new BannerPlugin({\n        banner: 'require(\"source-map-support/source-map-support.js\").install();',\n        test: /\\.js$/,\n        raw: true,\n        entryOnly: true,\n      }))\n      return\n    }\n\n    configurator.entryFiles.push(path.join(__dirname, \"../electron-main-hmr/main-hmr\"))\n    const devIndexFile = await getFirstExistingFile([\"index.dev.ts\", \"index.dev.js\"], path.join(configurator.projectDir, \"src/main\"))\n    if (devIndexFile != null) {\n      configurator.entryFiles.push(devIndexFile)\n    }\n  }\n}\n"],"sourceRoot":""}
